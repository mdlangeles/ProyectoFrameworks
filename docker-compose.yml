version: "3.9"

services:
  # -----------------------
  # Jupyter para desarrollo
  # -----------------------
  jupyter-lab:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter-lab
    ports:
      - "8888:8888"
    working_dir: /workspace
    volumes:
      - ./notebooks:/workspace
      - ./requirements.txt:/workspace/requirements.txt
      - ./dlt:/workspace/.dlt
    command: >
      bash -c "pip install -r /workspace/requirements.txt && start.sh jupyter lab"
    environment:
      # Variables de MinIO
      JUPYTER_TOKEN: ${JUPYTER_TOKEN}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_DOMAIN: ${MINIO_DOMAIN}
      MINIO_BUCKETS: ${MINIO_BUCKETS}
      SOURCE_PREFIX: ${SOURCE_PREFIX}
      PARQUET_URL: ${PARQUET_URL}
      MINIO_OBJECT: ${MINIO_OBJECT}
      PYICEBERG_CATALOG__NESSIE__URI: http://nessie:19120/api/v1
      #PYICEBERG_CATALOG__NESSIE__WAREHOUSE: s3://warehouse
      #PYICEBERG_CATALOG__NESSIE__S3__ENDPOINT: http://minio:9000
      #PYICEBERG_CATALOG__NESSIE__S3__ACCESS_KEY_ID: admin
      #PYICEBERG_CATALOG__NESSIE__S3__SECRET_ACCESS_KEY: password
      AWS_ALLOW_HTTP: true
    
    networks:
      - iceberg_net

  # -----------------------
  # Spark + Iceberg
  # -----------------------
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    networks:
      - iceberg_net
    depends_on:
      # - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    ports:
      - "8080:8080"
      - "10000:10000"
      - "10001:10001"

  # # -----------------------
  # # Iceberg REST catalog
  # # -----------------------
  # rest:
  #   image: apache/iceberg-rest-fixture
  #   container_name: iceberg-rest
  #   networks:
  #     - iceberg_net
  #   ports:
  #     - "8181:8181"
  #   environment:
  #     AWS_ACCESS_KEY_ID: admin
  #     AWS_SECRET_ACCESS_KEY: password
  #     AWS_REGION: us-east-1
  #     CATALOG_WAREHOUSE: s3://new_bucket/
  #     CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
  #     CATALOG_S3_ENDPOINT: http://minio:9000
  #     CATALOG_S3_PATH_STYLE_ACCESS: true

  # -----------------------
  # MinIO para almacenamiento
  # -----------------------
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data --console-address ":9001"
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - "9000:9000"
      - "9001:9001"

  # -----------------------
  # Inicializador de MinIO
  # -----------------------
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      - iceberg_net
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc mb minio/new_bucket;
      /usr/bin/mc policy set public minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  # -----------------------
  # Nessie catalog service
  # -----------------------
  nessie:
    image: ghcr.io/projectnessie/nessie:0.99.0
    container_name: nessie
    ports:
      - "19120:19120"
    environment:
      - nessie.catalog.default-warehouse=new_bucket
      - nessie.catalog.warehouses.new_bucket.location=s3://new_bucket/
      - nessie.catalog.warehouses.new_bucket.default-options.endpoint=http://minio:9000/
      - nessie.catalog.warehouses.new_bucket.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key  # ✅ Correcto
      - nessie.catalog.warehouses.new_bucket.default-options.secret-access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.secret-access-key  # ✅ Correcto
      - nessie.catalog.warehouses.new_bucket.default-options.path-style-access=true
      - nessie.catalog.warehouses.new_bucket.default-options.auth-type=STATIC
      - nessie.catalog.warehouses.new_bucket.default-options.region=us-east-1
      - nessie.catalog.secrets.access-key.name=admin  # ✅ Credenciales aquí
      - nessie.catalog.secrets.access-key.secret=password  # ✅ Credenciales aquí
      - nessie.catalog.secrets.secret-access-key.name=admin  # ✅ Para secret-access-key
      - nessie.catalog.secrets.secret-access-key.secret=password  # ✅ Para secret-access-key
    networks:
      - iceberg_net

  # -----------------------
  # ClickHouse para analítica
  # -----------------------
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9009:9009"
    networks:
      - iceberg_net

networks:
  iceberg_net:
    driver: bridge