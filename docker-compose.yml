version: "3.9"

services:
  # -----------------------
  # Jupyter para desarrollo
  # -----------------------
  jupyter-lab:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter-lab
    ports:
      - "8888:8888"
    volumes:
      - ./scripts:/home/jovyan/dlt_pipeline
      - ./requirements.txt:/home/jovyan/requirements.txt
    command: >
      bash -c "pip install -r /home/jovyan/requirements.txt && start.sh jupyter lab"
    networks:
      - iceberg_net

  # -----------------------
  # Spark + Iceberg
  # -----------------------
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    build: spark/
    networks:
      - iceberg_net
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - "8080:8080"
      - "10000:10000"
      - "10001:10001"

  # -----------------------
  # Iceberg REST catalog
  # -----------------------
  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      - iceberg_net
    ports:
      - "8181:8181"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  # -----------------------
  # MinIO para almacenamiento
  # -----------------------
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: minio
    command: server /data --console-address ":9001"
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - "9000:9000"
      - "9001:9001"

  # -----------------------
  # Inicializador de MinIO
  # -----------------------
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      - iceberg_net
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

  # -----------------------
  # Nessie catalog service
  # -----------------------
  nessie:
    image: projectnessie/nessie:latest
    container_name: nessie
    ports:
      - "19120:19120"
    networks:
      - iceberg_net

  # -----------------------
  # ClickHouse para anal√≠tica
  # -----------------------
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9009:9009"
    networks:
      - iceberg_net

networks:
  iceberg_net:
